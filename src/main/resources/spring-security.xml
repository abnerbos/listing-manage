<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">


    <http auto-config="true" use-expressions="true" >

        <intercept-url pattern="/auth/login" access="permitAll"/>
        <intercept-url pattern="/product/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/main/common" access="hasRole('ROLE_USER')"/>

        <!--<form-login
                login-page="/auth/login"
                authentication-failure-url="/auth/login?error=true"
                default-target-url="/main/common"/>

        <logout
                invalidate-session="true"
                logout-success-url="/auth/login"
                logout-url="/auth/logout"/>-->

    </http>




    <!-- 使用内存权限管理的配置信息, 在tomcat启动时,会加载这个文件并一直保存在内存中,知道应用程序重启,所以也叫内存权限管理-->

    <authentication-manager>
        <authentication-provider>
            <user-service id="userDetailsService">
                <user name="amazon" password="amzon" authorities="ROLE_USER"/>
                <user name="root" password="root" authorities="ROLE_ADMIN"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>





    <!-- 使用数据库作为权限管理的来源,data-source-ref指定了数据源,所指定的数据源必须包含users, authorities表,并符合security的定义规范 -->
    <!--<authentication-provider>-->
        <!--<jdbc-user-service data-source-ref="dataSource" />-->
    <!--</authentication-provider>-->

</beans:beans>